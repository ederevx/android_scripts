#!/bin/bash

# SPDX-FileCopyrightText: 2024 Edrick Sinsuan
# SPDX-License-Identifier: Apache-2.0

script_dir=$(dirname $0)
if ! check_file "$script_dir/setup_env"; then
    decho "setup_env must be present in $script_dir!"
    exit_timestamp 1
fi
source $script_dir/setup_env

if ! check_file "build/envsetup.sh"; then
    decho "Call this script in the ROM's root directory!"
    exit_timestamp 1
fi

readonly ROM_ROOT="$(pwd)"

readonly white_list_default=(
    "$ROM_ROOT"
)
readonly black_list_default=(
)

white_list=(${white_list_default[@]})
black_list=(${black_list_default[@]})

is_skipped() {
    local white_list_tmp=(${white_list[@]})
    local black_list_tmp=(${black_list[@]})

    # Reset the lists after patch
    white_list=(${white_list_default[@]})
    black_list=(${black_list_default[@]})

    for rom in ${black_list_tmp[@]}; do
        if [[ ! -z $(echo $ROM_ROOT | grep -i $rom) ]]; then
            return 0
        fi
    done

    if [[ ! -z $target_patch ]]; then
        if [[ $target_patch != $patch_id ]]; then
            return 0
        else
            return 1
        fi
    fi

    for rom in ${white_list_tmp[@]}; do
        if [[ ! -z $(echo $ROM_ROOT | grep -i $rom) ]]; then
            return 1
        fi
    done

    return 0
}

patch_banner() {
    border
    echo "Patch ID: $patch_id"
    echo "Dir: $dir"
    border
}

patch_git() {
    local giturl=$1
    local sha1=$2
    local sha2=$3

    local commit_sha
    local commit_cnt
    
    dir="$ROM_ROOT/$dir"

    if is_skipped; then
        return
    fi

    patch_banner

    if check_dir "$dir" && cd "$dir"; then
        git fetch $giturl
        if [[ -z $sha2 ]]; then
            commit_sha="$sha1"
            commit_cnt="-n 1"
        else
            local conn='^..'
            commit_sha="$sha1$conn$sha2"
        fi
        decho "$(git log $commit_cnt --pretty=oneline $commit_sha)"

        if [[ $list_patches == "y" ]]; then
            return
        fi

        git cherry-pick $commit_sha
        if [[ ! -z $sha2 ]]; then
            for ((i=0 ; i < ($(git rev-list --count $commit_sha) - 1) ; i++));
                do
                pause_script
                git cherry-pick --skip
            done
        else
            pause_script
        fi
        git cherry-pick --abort &> /dev/null
    fi
}

unpatch_git() {
    local sha1=$1
    local sha2=$2

    local commit_sha
    local commit_cnt

    dir="$ROM_ROOT/$dir"

    if is_skipped; then
        return
    fi

    patch_banner

    if check_dir "$dir" && cd "$dir"; then
        if [[ -z $sha2 ]]; then
            commit_sha="$sha1"
        else
            local conn='^..'
            commit_sha="$sha1$conn$sha2"
        fi
        decho "Reverting patches $commit_sha"
        git revert $commit_sha
        if [[ ! -z $sha2 ]]; then
            for ((i=0 ; i < ($(git rev-list --count $commit_sha) - 1) ; i++));
                do
                pause_script
                git revert --skip
            done
        else
            pause_script
        fi
        git revert --abort &> /dev/null
    fi
}

patch_single_curl() {
    local patchurl=$1

    dir="$ROM_ROOT/$dir"

    if is_skipped; then
        return
    fi

    patch_banner

    if check_dir "$dir" && cd "$dir"; then
        decho $patchurl

        if [[ $list_patches == "y" ]]; then
            return
        fi

        curl $patchurl | git am -3
        pause_script
        git am --abort &> /dev/null
    fi
}

patch_single_local() {
    local patchfile=$1

    dir="$ROM_ROOT/$dir"

    if is_skipped; then
        return
    fi

    patch_banner

    if check_dir "$dir" && cd "$dir"; then
        decho $patchfile

        if [[ $list_patches == "y" ]]; then
            return
        fi

        git am -3 $patchfile
        pause_script
        git am --abort &> /dev/null
    fi
}

param_func() {
    while [[ $# -gt 0 ]]
        do
        key="$1"

        case $key in
            -s|--skip-pause)
                nopause=y
            ;;
            -p|--patch-id)
                if check_valid "$2"; then
                    target_patch="$2"
                    shift
                fi
            ;;
            -a|--all)
                all_patches=y
            ;;
            -l|--list)
                list_patches=y
            ;;
        esac
        shift
    done
}

#
# Patches
#

#
# 4.14 necessary patches
#

patch_qcomcaf() {
    patch_id="qcomcaf"

    dir=hardware/qcom-caf/common
    # Patch qcom-caf for 4.14
    patch_git "https://github.com/ederevx/android_hardware_qcom-caf_common a15" \
        "468cd2bae94cdf01a826ea78c53469beb2427046"
}

patch_displayintf() {
    patch_id="displayintf"

    dir=vendor/qcom/opensource/commonsys-intf/display
    # Patch display-commonsys-intf for 4.14
    patch_git "https://github.com/ederevx/android_vendor_qcom_opensource_display-commonsys-intf lineage-22.1-msm8998-4-14" \
        "385d238cc4ec9b7802b941131ef99742e530c659" \
        "f235461d3cd0fe015e86a9c6136e2d3cf7c392ea"
}

patch_sepolicylegacy() {
    patch_id="sepolicylegacy"

    dir=device/qcom/sepolicy-legacy-um
    # Patch sepolicy-legacy-um for 4.14
    patch_git "https://github.com/ederevx/android_device_qcom_sepolicy a15" \
        "bd3086d857f6c9f9f2c3461f6bead0e75f119886" \
        "492418bf7ac1336d3c42db326ffa40c8d3ecc20d"
}

#
# Various build fixes
#

patch_buildmake() {
    patch_id="buildmake"

    dir=build/make
    # Define fake out directories
    patch_git "https://github.com/LineageOS/android_build lineage-21.0" \
        "ea73f271e00847ea25b1dc232416685e1a21cb1e"
}

patch_bison() {
    patch_id="bison"

    dir=build/soong
    black_list=(
        "yaap"
    )
    # Allow bison - lineage
    #patch_git "https://github.com/ederevx/android_build_soong a14" \
    #    "6a4996614768c719b9559956289a11c91369e958"
    patch_git "https://github.com/ederevx/android_build_soong a15-derp" \
        "7f817717bffec902a4397a3fee79005bcf536015"

    dir=build/soong
    white_list=(
        "yaap"
    )
    # Allow bison - yaap
    patch_git "https://github.com/ederevx/android_build_soong a15-yaap" \
        "75cdf0768d969b63fa37dd03d36a76bc0632c19"
}

patch_volumepanel() {
    patch_id="volumepanel"

    dir=frameworks/base
    white_list=(
        "derp"
    )
    # Allow overriding volume panel is left
    patch_git "https://github.com/ederevx/derp_frameworks_base a14-derp" \
        "b09631bbaa88de1543056044e689d333dd2b2706"
}

patch_tsgestures() {
    patch_id="tsgestures"

    dir=packages/apps/LineageParts
    black_list=(
    #   "derp"
        "$ROM_ROOT"
    )
    # Remove touchscreen gestures in LineageParts
    patch_git "https://github.com/ederevx/android_packages_apps_LineageParts a14" \
        "d0ccc35c0bd117e8841b0d414643c24ebc20a106"

    dir=packages/apps/Settings
    black_list=(
        "$ROM_ROOT"
    )
    # Remove touchscreen gestures in Settings
    patch_git "https://github.com/ederevx/android_packages_apps_Settings a14" \
        "31187a64c9a5c49495651d11926edc5424a9473f"
}

patch_sepolicybinder() {
    patch_id="sepolicybinder"

    dir=system/sepolicy
    white_list=(
        "yaap"
    )
    # Fix binder denials
    patch_git "https://github.com/ederevx/rising_android_system_sepolicy a15-yaap" \
        "e31d7c8e856c1ec009db3de418c695cbe8d7a8d1"
}

patch_sepolicydrm() {
    patch_id="sepolicydrm"

    dir=system/sepolicy
    white_list=(
        "yaap"
    )
    # Allow hal_drm and hal_widevine for vendor access
    patch_git "https://github.com/ederevx/android_system_sepolicy a16-yaap" \
        "8235f2a15dd68d7c3ec5f7dd651caac83a1a173a"
}

patch_retrodyn() {
    patch_id="retrodyn"

    dir=system/sepolicy
    white_list=(
        "yaap"
    )
    # Resolve neverallow in retrofit devices
    patch_git "https://github.com/ederevx/android_system_sepolicy a15-yaap" \
        "a74949e75273cfe2d0b2a94eba51daa2cfb02c52"

    dir=system/core
    white_list=(
        "yaap"
    )
    # fixup! liblp: Allow to flash on bigger block device
    patch_git "https://github.com/LineageOS/android_system_core lineage-21.0" \
        "abe5928776475c98f57175492ccf80957602910c"

    dir=bootable/deprecated-ota
    white_list=(
        "yaap"
    )
    # updater: Support loading dynamic partition metadata from OTA - added in source
    #patch_git "https://github.com/ederevx/android_bootable_deprecated-ota a15-yaap" \
    #    "86938568e3917a084c03d916771c9e7cbe735793"

    dir=build/tools
    white_list=(
        "yaap"
    )
    # releasetools: Pass non-sparse super_empty.img to update_dynamic_partitions()
    # https://github.com/LineageOS/android_build/commit/8124d9428ef269148f06c262f636d29e566d92d4
    patch_git "git@github.com:ederevx/android_build_tools.git a15-yaap" \
        "6b2f2725a0a6e00e4a8943488c16fe5b1cb5f8bf"

    dir=build/tools
    white_list=(
        "yaap"
    )
    # Allow override of device asserts, including multi-device support
    # https://github.com/LineageOS/android_build/commit/2f71c5fcdf3786692c6d2ec5433e1ccf51132047
    patch_git "git@github.com:ederevx/android_build_tools.git a15-yaap" \
        "5725f3d83f2e362c8e1d7c433c1cc0ca65829617"

    dir=build/tools
    white_list=(
        "yaap"
    )
    # build: ota: Support for install tools in /tmp/install
    # https://github.com/P-404/android_build/commit/deb9184d52445d1c390e89f3aaa6cbb0d83d1ed0
    patch_git "git@github.com:ederevx/android_build_tools.git a15-yaap" \
        "5e8f81226c5e74d9abcf9fc65258ebfe9dbe6c51"
}

patch_hardwarepixel() {
    patch_id="hardwarepixel"

    dir=hardware/google/pixel
    white_list=(
        "yaap"
    )
    # Prevent build error with YAAP vendor
    patch_git "https://github.com/LineageOS/android_hardware_google_pixel lineage-21.0" \
        "5723b06faf36c6a2c7c27a35ac43e30e51d8eb23"
}

patch_sepolicylegacyxtra() {
    patch_id="sepolicylegacyxtra"

    dir=device/qcom/sepolicy-legacy-um
    white_list=(
        "yaap"
    )
    # Remove xtra_control_prop
    patch_git "https://github.com/ederevx/android_device_qcom_sepolicy a15-yaap" \
        "50b4265bb4472f360730b32c09598ef96ad79240"
}

patch_lineagesepolicyfsck() {
    patch_id="lineagesepolicyfsck"
    
    dir=device/lineage/sepolicy
    white_list=(
        "yaap"
    )
    # Remove fsck prop
    patch_git "https://github.com/ederevx/android_device_lineage_sepolicy a15-yaap" \
        "4779acca48776a62a9ec708ba63ec6482b30c0bb"
}

patch_notifled() {
    patch_id="notifled"
    
    dir=framework/base
    # Patch framework/base for notification LED fix
    patch_git "https://github.com/LineageOS/android_frameworks_base lineage-21.0" \
        "f9c33143b3906d07aebb782f214775a623ead94a"
}

patch_norecoveryover() {
    patch_id="norecoveryover"

    dir=bootable/deprecated-ota
    white_list=(
        "yaap"
    )
    # Allow us to not override the recovery
    patch_git "https://github.com/ederevx/android_bootable_deprecated-ota a15-yaap" \
        "93059ed1aca99828deeeda911351ec2bb90579d6"
}

patch_settings() {
    patch_id="settings"

    dir=packages/apps/Settings
    # Patch settings app for theming a15
    patch_git "https://github.com/ederevx/packages_apps_Settings a15-pixelage" \
        "c0f973969d28a0b36e6d7c1c4db705f5e632c934"
}

decho "This only needs to be called once if done cleanly and after a repo start!"

param_func "$@"

# 4.14 necessary patches
patch_qcomcaf
patch_displayintf
patch_sepolicylegacy

if [[ $all_patches == "y" ]] || [[ ! -z $target_patch ]]; then
    # Various build fixes
    patch_buildmake
    patch_bison
    #patch_volumepanel
    #patch_tsgestures
    #patch_sepolicybinder
    patch_sepolicydrm
    patch_retrodyn
    patch_hardwarepixel
    patch_sepolicylegacyxtra
    patch_lineagesepolicyfsck
    patch_notifled
    patch_norecoveryover
fi

exit_timestamp 0
